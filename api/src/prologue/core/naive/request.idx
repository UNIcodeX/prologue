NativeRequest	src/prologue/core/naive/request.html#NativeRequest	request: NativeRequest	
Request	src/prologue/core/naive/request.html#Request	request: Request	
url	src/prologue/core/naive/request.html#url,Request	request: url(request: Request): Uri	
port	src/prologue/core/naive/request.html#port,Request	request: port(request: Request): string	
path	src/prologue/core/naive/request.html#path,Request	request: path(request: Request): string	
stripPath	src/prologue/core/naive/request.html#stripPath,Request	request: stripPath(request: var Request)	
query	src/prologue/core/naive/request.html#query,Request	request: query(request: Request): string	
scheme	src/prologue/core/naive/request.html#scheme,Request	request: scheme(request: Request): string	
setScheme	src/prologue/core/naive/request.html#setScheme,Request,string	request: setScheme(request: var Request; value: string)	
body	src/prologue/core/naive/request.html#body,Request	request: body(request: Request): string	
headers	src/prologue/core/naive/request.html#headers,Request	request: headers(request: Request): HttpHeaders	
reqMethod	src/prologue/core/naive/request.html#reqMethod,Request	request: reqMethod(request: Request): HttpMethod	
getCookie	src/prologue/core/naive/request.html#getCookie,Request,string,string	request: getCookie(request: Request; key: string; default: string = &quot;&quot;): string	
contentType	src/prologue/core/naive/request.html#contentType,Request	request: contentType(request: Request): string	
charset	src/prologue/core/naive/request.html#charset,Request	request: charset(request: Request): string	
secure	src/prologue/core/naive/request.html#secure,Request	request: secure(request: Request): bool	
hostName	src/prologue/core/naive/request.html#hostName,Request	request: hostName(request: Request): string	
send	src/prologue/core/naive/request.html#send,Request,string	request: send(request: Request; content: string): Future[void]	
respond	src/prologue/core/naive/request.html#respond,Request,HttpCode,string,HttpHeaders	request: respond(request: Request; code: HttpCode; body: string;\n        headers: HttpHeaders = newHttpHeaders()): Future[void]	
respond	src/prologue/core/naive/request.html#respond,Request,Response	request: respond(request: Request; response: Response): Future[void]	
close	src/prologue/core/naive/request.html#close,Request	request: close(request: Request)	
initRequest	src/prologue/core/naive/request.html#initRequest,Request	request: initRequest(nativeRequest: NativeRequest; cookies = initCookieJar();\n            pathParams = newStringTable(modeCaseSensitive);\n            queryParams = newStringTable(modeCaseSensitive);\n            postParams = newStringTable(modeCaseSensitive)): Request	
