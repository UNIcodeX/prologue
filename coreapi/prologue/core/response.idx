Response	prologue/core/response.html#Response	response: Response	
`$`	prologue/core/response.html#$,Response	response: `$`(response: Response): string	
initResponse	prologue/core/response.html#initResponse,HttpVersion,HttpCode,string	response: initResponse(httpVersion: HttpVersion; code: HttpCode; headers = [\n    (&quot;Content-Type&quot;, &quot;text/html; charset=UTF-8&quot;)].newHttpHeaders; body = &quot;&quot;): Response	
hasHeader	prologue/core/response.html#hasHeader,Response,string	response: hasHeader(response: Response; key: string): bool	
setHeader	prologue/core/response.html#setHeader,Response,string,string	response: setHeader(response: var Response; key, value: string)	
setHeader	prologue/core/response.html#setHeader,Response,string,	response: setHeader(response: var Response; key: string; value: sink seq[string])	
addHeader	prologue/core/response.html#addHeader,Response,string,string	response: addHeader(response: var Response; key, value: string)	
setCookie	prologue/core/response.html#setCookie,Response,string,string,string,Option[int],string,string	response: setCookie(response: var Response; key, value: string; expires = &quot;&quot;;\n          maxAge: Option[int] = none(int); domain = &quot;&quot;; path = &quot;&quot;; secure = false;\n          httpOnly = false; sameSite = Lax)	
setCookie	prologue/core/response.html#setCookie,Response,string,string,,Option[int],string,string	response: setCookie(response: var Response; key, value: string; expires: DateTime | Time;\n          maxAge: Option[int] = none(int); domain = &quot;&quot;; path = &quot;&quot;; secure = false;\n          httpOnly = false; sameSite = Lax)	
deleteCookie	prologue/core/response.html#deleteCookie,Response,string,string,string,string	response: deleteCookie(response: var Response; key: string; value = &quot;&quot;; path = &quot;&quot;; domain = &quot;&quot;)	
abort	prologue/core/response.html#abort,string	response: abort(code = Http401; body = &quot;&quot;; headers = newHttpHeaders(); version = HttpVer11): Response	
redirect	prologue/core/response.html#redirect,string,string,int	response: redirect(url: string; code = Http301; body = &quot;&quot;; delay = 0; headers = newHttpHeaders();\n         version = HttpVer11): Response	
error404	prologue/core/response.html#error404,string	response: error404(code = Http404; body = &quot;&lt;h1&gt;404 Not Found!&lt;/h1&gt;&quot;; headers = newHttpHeaders();\n         version = HttpVer11): Response	
htmlResponse	prologue/core/response.html#htmlResponse,string	response: htmlResponse(text: string; code = Http200; headers = newHttpHeaders();\n             version = HttpVer11): Response	
plainTextResponse	prologue/core/response.html#plainTextResponse,string	response: plainTextResponse(text: string; code = Http200; headers = newHttpHeaders();\n                  version = HttpVer11): Response	
jsonResponse	prologue/core/response.html#jsonResponse,JsonNode	response: jsonResponse(text: JsonNode; code = Http200; headers = newHttpHeaders();\n             version = HttpVer11): Response	
resp	prologue/core/response.html#resp.m,string	response: resp(body: string; code = Http200)	
resp	prologue/core/response.html#resp.m,Response	response: resp(response: Response)	
