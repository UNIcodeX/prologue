ResponseHeaders	prologue/core/httpcore/httplogue.html#ResponseHeaders	httplogue: ResponseHeaders	
getTables	prologue/core/httpcore/httplogue.html#getTables,ResponseHeaders	httplogue: getTables(headers: ResponseHeaders): TableRef[string, seq[string]]	
initResponseHeaders	prologue/core/httpcore/httplogue.html#initResponseHeaders	httplogue: initResponseHeaders(): ResponseHeaders	
initResponseHeaders	prologue/core/httpcore/httplogue.html#initResponseHeaders,openArray[tuple[string,string]]	httplogue: initResponseHeaders(keyValuePairs: openArray[tuple[key: string, val: string]]): ResponseHeaders	
`$`	prologue/core/httpcore/httplogue.html#$,ResponseHeaders	httplogue: `$`(headers: ResponseHeaders): string	
clear	prologue/core/httpcore/httplogue.html#clear,ResponseHeaders	httplogue: clear(headers: ResponseHeaders)	
`[]`	prologue/core/httpcore/httplogue.html#[],ResponseHeaders,string	httplogue: `[]`(headers: ResponseHeaders; key: string): HttpHeaderValues	
`[]`	prologue/core/httpcore/httplogue.html#[],ResponseHeaders,string,int	httplogue: `[]`(headers: ResponseHeaders; key: string; i: int): string	
`[]=`	prologue/core/httpcore/httplogue.html#[]=,ResponseHeaders,string,string	httplogue: `[]=`(headers: ResponseHeaders; key, value: string)	
`[]=`	prologue/core/httpcore/httplogue.html#[]=,ResponseHeaders,string,seq[string]	httplogue: `[]=`(headers: ResponseHeaders; key: string; value: seq[string])	
add	prologue/core/httpcore/httplogue.html#add,ResponseHeaders,string,string	httplogue: add(headers: ResponseHeaders; key, value: string)	
del	prologue/core/httpcore/httplogue.html#del,ResponseHeaders,string	httplogue: del(headers: ResponseHeaders; key: string)	
pairs	prologue/core/httpcore/httplogue.html#pairs.i,ResponseHeaders	httplogue: pairs(headers: ResponseHeaders): tuple[key, value: string]	
contains	prologue/core/httpcore/httplogue.html#contains,HttpHeaderValues,string	httplogue: contains(values: HttpHeaderValues; value: string): bool	
hasKey	prologue/core/httpcore/httplogue.html#hasKey,ResponseHeaders,string	httplogue: hasKey(headers: ResponseHeaders; key: string): bool	
getOrDefault	prologue/core/httpcore/httplogue.html#getOrDefault,ResponseHeaders,string	httplogue: getOrDefault(headers: ResponseHeaders; key: string;\n             default = @[&quot;&quot;].HttpHeaderValues): HttpHeaderValues	
len	prologue/core/httpcore/httplogue.html#len,ResponseHeaders	httplogue: len(headers: ResponseHeaders): int	
