Info	src/prologue/validate/validate.html#Info	validate: Info	
ValidateHandler	src/prologue/validate/validate.html#ValidateHandler	validate: ValidateHandler	
FormValidation	src/prologue/validate/validate.html#FormValidation	validate: FormValidation	
newFormValidation	src/prologue/validate/validate.html#newFormValidation,openArray[]	validate: newFormValidation(validator: openArray[(string, seq[ValidateHandler])]): FormValidation	
validate	src/prologue/validate/validate.html#validate,FormValidation,StringTableRef	validate: validate(formValidation: FormValidation; textTable: StringTableRef; allMsgs = true): Info	
isInt	src/prologue/validate/validate.html#isInt,string	validate: isInt(msg = &quot;&quot;): ValidateHandler	
isNumeric	src/prologue/validate/validate.html#isNumeric,string	validate: isNumeric(msg = &quot;&quot;): ValidateHandler	
isBool	src/prologue/validate/validate.html#isBool,string	validate: isBool(msg = &quot;&quot;): ValidateHandler	
minValue	src/prologue/validate/validate.html#minValue,float,string	validate: minValue(min: float; msg = &quot;&quot;): ValidateHandler	
maxValue	src/prologue/validate/validate.html#maxValue,float,string	validate: maxValue(max: float; msg = &quot;&quot;): ValidateHandler	
rangeValue	src/prologue/validate/validate.html#rangeValue,float,float,string	validate: rangeValue(min, max: float; msg = &quot;&quot;): ValidateHandler	
minLength	src/prologue/validate/validate.html#minLength,Natural,string	validate: minLength(min: Natural; msg = &quot;&quot;): ValidateHandler	
maxLength	src/prologue/validate/validate.html#maxLength,Natural,string	validate: maxLength(max: Natural; msg = &quot;&quot;): ValidateHandler	
rangeLength	src/prologue/validate/validate.html#rangeLength,Natural,Natural,string	validate: rangeLength(min, max: Natural; msg = &quot;&quot;): ValidateHandler	
equals	src/prologue/validate/validate.html#equals,string,string	validate: equals(value: string; msg = &quot;&quot;): ValidateHandler	
accepted	src/prologue/validate/validate.html#accepted,string	validate: accepted(msg = &quot;&quot;): ValidateHandler	
required	src/prologue/validate/validate.html#required,string	validate: required(msg = &quot;&quot;): ValidateHandler	
matchRegex	src/prologue/validate/validate.html#matchRegex,Regex,string	validate: matchRegex(value: Regex; msg = &quot;&quot;): ValidateHandler	
matchUrl	src/prologue/validate/validate.html#matchUrl,string	validate: matchUrl(msg = &quot;&quot;): ValidateHandler	
